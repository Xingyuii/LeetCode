class Solution:
    def removeKdigits(self, nums: list, k: int) -> str:
        numStack = []
        # 将列表中的元素转换为字符串类型（假设原列表元素可能为数字类型）
        nums = [str(x) for x in nums]

        # 构建单调递增的数字串
        for digit in nums:
            digit_int = int(digit)
            while k and numStack and int(numStack[-1]) < digit_int:
                numStack.pop()
                k -= 1
            numStack.append(digit)

        # 处理k还有剩余但numStack为空的边界情况
        while k > 0 and numStack:
            numStack.pop()
            k -= 1

        # 处理k大于numStack长度的边界情况，防止切片越界
        if k > len(numStack):
            k = len(numStack)

        # 如果 K > 0，删除末尾的 K 个字符
        finalStack = numStack[:-k] if k else numStack

        # 抹去前导零
        return "".join(finalStack).lstrip('0') or "0"


if __name__ == "__main__":
    solution = Solution()
    print(solution.removeKdigits([3, 6, 10, 4], 2))
    print(solution.removeKdigits([3, 6, 9, 4], 2))